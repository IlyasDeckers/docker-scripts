#!/bin/bash

echo -n 'This setup relies on etcd. Do you want to create a etcd container? [yes/no] ';
read etcdcontainer;

if [ "$etcdcontainer" == 'yes' ];
then
  echo -n 'Please specify the etcd listen address: ';
  read etcdnetwork;
else
  echo -n 'What address is etcd listening on? '
  read etcdnetwork;
fi


echo -n 'Create network? [yes/no]: '
read createnetwork;

if [ "$createnetwork" == 'yes' ];
then
  echo -n 'Please specify a network name: ';
  read network;

  docker network create \
    --driver overlay \
    $network

elif [ "$createnetwork" == 'no' ]
then

  echo 'What network would you like to use?';
  echo '';
  docker network ls
  echo '';
  echo -n 'Choose one (name): ';
  read network

else
  echo 'You must specify a network';
  echo 'exit';
  exit 1;
fi

echo -n 'Please specify the cluster name: ';
read clustername;
echo '';
echo -n 'Please specify the mysql root password: ';
read mysqlroot;

echo ''
echo ''
echo "  Create etcd container: "$etcdcontainer;
echo "  etcd listen address:   "$etcdnetwork;
echo "  Create Network:        "$createnetwork;
echo "  Network name:          "$network
echo "  Cluster name:          "$clustername;
echo "  MySQL root password:   "$mysqlroot
echo ""
echo -n "Is this information correct? [yes/no] "
read confirmation;

if [ "$confirmation" == 'no' ]
then
  exit 1;
fi

if [ "$etcdcontainer" == 'yes' ];
then
  echo ''
  echo 'Starting etcd';
  sudo docker run --net=host --name etcd quay.io/coreos/etcd:v2.3.8 \
    --name infa0 \
    --data-dir=data.etcd --name infra0 \
    --initial-advertise-peer-urls http://$etcdnetwork:2380 --listen-peer-urls http://$etcdnetwork:2380 \
    --advertise-client-urls http://$etcdnetwork:2379 --listen-client-urls http://$etcdnetwork:2379 \
    --initial-cluster infra0=http://$etcdnetwork:2380 \
    --initial-cluster-state new --initial-cluster-token etcdtoken &
  sleep 5;
else
  curl -sS http://$IP:2379/version
  echo 'etcd detected';
fi

echo ''
echo 'Starting first node';

docker service create \
--name client-mysql-master01 \
--network $network \
-e MYSQL_ROOT_PASSWORD=$mysqlroot \
-e DISCOVERY_SERVICE=$etcdnetwork:2379 \
-e XTRABACKUP_PASSWORD=$mysqlroot \
-e CLUSTER_NAME=$clustername \
severalnines/pxc56
echo '';
echo 'Waiting 10 seconds...'
sleep 10;
echo 'Starting second node'

docker service create \
--name client-mysql-master02 \
--network $network \
-e MYSQL_ROOT_PASSWORD=$mysqlroot \
-e DISCOVERY_SERVICE=$etcdnetwork:2379 \
-e XTRABACKUP_PASSWORD=$mysqlroot \
-e CLUSTER_NAME=$clustername \
severalnines/pxc56

echo '';
echo 'Waiting 10 seconds...'
sleep 10;
echo 'Starting third node'
docker service create \
--name client-mysql-master03 \
--network $network \
-e MYSQL_ROOT_PASSWORD=$mysqlroot \
-e DISCOVERY_SERVICE=$etcdnetwork:2379 \
-e XTRABACKUP_PASSWORD=$mysqlroot \
-e CLUSTER_NAME=$clustername \
severalnines/pxc56

echo 'Percona XtraDB started successfully'
echo 'Use perconaxtradb --status to check the cluster health'
